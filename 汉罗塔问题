package 算法;

public class 汉罗塔问题 {

    public static void main(String[] args) {
        hanluota(5, 'A', 'B', 'C');
    }

    /**
     *
      * @param n 共有n个盘子
     * @param from  开始的盘子
     * @param in    中间的柱子
     * @param to    目标柱子
     * 无论多少盘子，都可以认为只有上面所有盘子和下面一个盘子
     */
    public static void hanluota(int n, char from, char in, char to) {
        if (n == 1) {
            System.out.println("第1个盘子从" + from + "移动到" + to);
        } else {
            //无论多少盘子，都可以认为只有上面所有盘子和下面一个盘子
//            移动上面所有盘子到中间位置
            hanluota(n - 1, from, to, in);
//            移动下面的盘子
            System.out.println("把第" + n + "个盘子从" + from + "移动到" + to);
//            把下面所有盘子从中间位置移动到目标位置
            hanluota(n - 1, in, from, to);
        }
    }
}


